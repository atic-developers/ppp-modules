<?php

/**
 * @file
 * comportaments a mida per Pam a Pam: Mapes
 * AGPLv3 :)
 */

/**
 * Implements hook_leaflet_map_info().
 *
 * Return a default map for the module.
 */
function ppp_mapes_leaflet_map_info() {
  return array(
    'Pam a Pam' =>
    array(
      'label' => 'Pam a Pam',
      'description' => t('Mapa base per Pam a Pam'),
      'markercluster_icon' => array(
        // 'iconUrl'       => '/sites/default/files/icon.png',
        'iconUrl'       => 'https://lh6.googleusercontent.com/-60CxXZh7hjc/AAAAAAAAAAI/AAAAAAAAABA/L4jpzGjKkQo/photo.jpg',
        'iconSize'      => array('x' => '20', 'y' => '40'),
        'iconAnchor'    => array('x' => '20', 'y' => '40'),
        'popupAnchor'   => array('x' => '-8', 'y' => '-32'),
      ),
      'center' => array(
        'lat' => 41.7,
        'lon' => 2,
      ),
      'settings' => array(
        'zoom' => 16,
        'minZoom' => 0,
        'maxZoom' => 18,
        'dragging' => TRUE,
        'touchZoom' => TRUE,
        'scrollWheelZoom' => TRUE,
        'doubleClickZoom' => TRUE,
        'zoomControl' => TRUE,
        'attributionControl' => TRUE,
        'trackResize' => TRUE,
        'fadeAnimation' => TRUE,
        'zoomAnimation' => TRUE,
        'closePopupOnClick' => TRUE,
        // Params de markercluster.
        'animateAddingMarkers' => TRUE,
        'disableClusteringAtZoom' => 2,
        'maxClusterRadius' => 80,
        'showCoverageOnHover' => TRUE,
        'singleMarkerMode' => TRUE,
        'skipDuplicateAddTesting' => FALSE,
        'spiderfyOnMaxZoom' => TRUE,
        'zoomToBoundsOnClick' => TRUE,
        'addRegionToolTips' => FALSE,
      ),
      'layers' => array(
        'earth' => array(
          'urlTemplate' => 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
          'options' => array(
            'attribution' => "Mapa d'alternatives de consum Pam a Pam, desenvolupat per <a href='http://projecteictineo.com'>Projecte Ictineo SCCL</a>",
          ),
        ),
      ),
    ),
  );
}


/**
 * Implements hook_block_info().
 */
function ppp_mapes_block_info() {
  $blocks['ppp_mapes_mapahome'] = array(
    'info' => t('Pam a Pam main map'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function ppp_mapes_block_configure($delta = '') {
  $form = array();
  switch ($delta) {
    case 'ppp_mapes_mapahome':
      $form['ppp_mapes_grup_cap'] = array(
        '#type' => 'fieldset',
        '#title' => 'Elements de la capçalera',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );
      for ($i = 1; $i <= 8; $i++) {
        $form['ppp_mapes_grup_cap']['ppp_mapes_img' . $i] = array(
          '#type' => 'managed_file',
          '#title' => 'Imatge ' . $i . ' per la capçalera',
          '#description' => 'El tamany i proporcions de les imateges han de ser els correctes',
          '#default_value' => variable_get('ppp_mapes_img' . $i, ''),
          '#upload_validators' => array(
            'file_validate_extensions' => array('gif png jpg jpeg svg'),
          ),
          '#upload_location' => 'public://slide/',
        );
      }
      $form['ppp_mapes_grup_cap']['ppp_mapes_tit_gran'] = array(
        '#type' => 'textfield',
        '#title' => 'Titol principal del buscador',
        '#default_value' => variable_get('ppp_mapes_tit_gran', ''),
      );
      $form['ppp_mapes_grup_cap']['ppp_mapes_tit_petit'] = array(
        '#type' => 'textfield',
        '#title' => 'Titol secondari del buscador',
        '#default_value' => variable_get('ppp_mapes_tit_petit', ''),
      );
      $form['ppp_mapes_grup_cap']['ppp_mapes_placeholder'] = array(
        '#type' => 'textfield',
        '#title' => 'Text de la caixa del buscador',
        '#default_value' => variable_get('ppp_mapes_placeholder', ''),
      );
      $form['ppp_mapes_grup_cap']['ppp_mapes_sub'] = array(
        '#type' => 'textfield',
        '#title' => 'Text a sota la caixa del buscador (exemples)',
        '#default_value' => variable_get('ppp_mapes_sub', ''),
      );

      $form['ppp_mapes_grup_crit'] = array(
        '#type' => 'fieldset',
        '#title' => 'Paraules claus dels criteris',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );
      for ($i = 1; $i <= 15; $i++) {
        $form['ppp_mapes_grup_crit']['ppp_mapes_keys_field_avaluacio_criteri' . $i] = array(
          '#type' => 'textfield',
          '#title' => 'Paraules clau associades al criteri ' . $i,
          '#default_value' => variable_get('ppp_mapes_keys_field_avaluacio_criteri' . $i, ''),
        );
      }
      $form['ppp_mapes_geojson'] = array(
        '#type' => 'textfield',
        '#title' => 'GeoJSON source for map points',
        '#default_value' => variable_get('ppp_mapes_geojson', ''),
      );
      break;
  }
  return $form;

}

/**
 * Implements hook_block_save().
 */
function ppp_mapes_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'ppp_mapes_mapahome':
      for ($i = 1; $i <= 8; $i++) {
        variable_set('ppp_mapes_img' . $i, $edit['ppp_mapes_img' . $i]);
        $file = file_load($edit['ppp_mapes_img' . $i]);
        if (!empty($file)) {
          $file->status = FILE_STATUS_PERMANENT;
          file_save($file);
          file_usage_add($file, 'ppp_mapes', 'slide', $i);
        }
      }
      variable_set('ppp_mapes_tit_petit', $edit['ppp_mapes_tit_petit']);
      variable_set('ppp_mapes_tit_gran', $edit['ppp_mapes_tit_gran']);
      for ($i = 1; $i <= 15; $i++) {
        variable_set('ppp_mapes_keys_field_avaluacio_criteri' . $i, $edit['ppp_mapes_keys_field_avaluacio_criteri' . $i]);
      }
      variable_set('ppp_mapes_placeholder', $edit['ppp_mapes_placeholder']);
      variable_set('ppp_mapes_sub', $edit['ppp_mapes_sub']);
      variable_set('ppp_mapes_geojson', $edit['ppp_mapes_geojson']);
      break;
  }
}

/**
 * Implements hook_block_view().
 */
function ppp_mapes_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'ppp_mapes_mapahome':
      global $base_url;
      $block['subject'] = '';
      $output = '';

      // Inclure el titol i subtitol.
      $output .= '<div id="header-slider-wrapper">';
      $output .= '<div id="header-cont-wrapper">';
      $output .= '<h2 id="search-title" class="search-cap">' . variable_get('ppp_mapes_tit_gran', '') . '</h2>';
      $output .= '<h3 id="search-subtitle" class="search-cap">' . variable_get('ppp_mapes_tit_petit', '') . '</h3>';

      // Inclure la capçalera de dalt.
      $exposed = module_invoke('views', 'block_view', '-exp-punts_del_mapa-page_1');
      $output .= render($exposed['content']);
      // Final del wrapper.
      $output .= '</div>';

      // Inclure slider d'imatges.
      $tmp_slide = '';
      for ($i = 1; $i <= 8; $i++) {
        $img = variable_get('ppp_mapes_img' . $i, '');
        if ($img != '') {
          $img_url = file_create_url(file_load($img)->uri);
          $tmp_slide .= '<img src="' . $img_url . '" />';
        }
      }
      if ($tmp_slide != '') {
        $output .= '<div class="cycle-slideshow" data-cycle-fx="scrollHorz"  data-cycle-timeout="9000"  data-cycle-prev="#slide-prev" data-cycle-next="#slide-next">';
        $output .= $tmp_slide;
        $output .= '</div>';
        $output .= '<div id="slide-prev"></div>';
        $output .= '<div id="slide-next"></div>';
      }
      $output .= '</div>';

      $output .= '<div id="map-wrapper">';
      // Pestanyes de centrat del mapa.
      $output .= '<div id="tabs-wrapper">';
      $output .= '<span class="centred-tab" id="centred-tab-cat">' . t('Map of whole Catalonia') . '</span>';
      $output .= '<span class="centred-tab" id="centred-tab-bcn">' . t('Map of Barcelona') . '</span>';
      $output .= '<span class="centred-tab" id="centred-tab-usr">' . t('Your position') . '</span>';
      $output .= '</div>';

      // Incloure el Mapa.
      $map = leaflet_map_get_info('Pam a Pam');
      $result = drupal_http_request($base_url . variable_get('ppp_mapes_geojson', ''));
      $points = '';
      if (in_array($result->code, array(200, 304))) {
        $json_string = (isset($result->data)) ? $result->data : '';
        $points = drupal_json_decode($json_string);
      }
      else {
        drupal_set_message(t('Invalid source for GeoJSON data: @source', array('@source' => variable_get('ppp_mapes_geojson', ''))), 'error');
      }
      // TODO style points in array.

      $map['center'] = array(
        'lat' => 41.7,
        'lon' => 2,
      );
      $map['settings'] = array(
        'zoom' => 8,
      );
      $output .= leaflet_render_map($map, array(), ' 400px');
      $output .= '<div id="preview"><div id="preview-content-wrapper"></div></div>';

      // Exposed filters bottom.
      $territori = taxonomy_get_tree('3');
      $filter1 = '<div id="filter-1" class="filter col col1">';
      $filter1 .= '<h4 class="filter-label">' . t('Territory') . '</h4>';
      $filter1 .= '<select data-placeholder="' . t('Add some place') . '" id="widget-filter-1" multiple="">';
      foreach ($territori as $tid => $term) {
        $filter1 .= '<option class="' . $tid . '" value="' . $term->tid . '">' . $term->name . '</option>';
      }
      $filter1 .= '</select>';
      $filter1 .= '</div>';
      $output .= $filter1;

      $sectors = taxonomy_get_tree('2', 0, 1);
      $filter2 = '<div id="filter-2" class="filter col col2">';
      $filter2 .= '<h4 class="filter-label">' . t('Sector') . '</h4>';
      $filter2 .= '<div class="icons-wrapper">';
      foreach ($sectors as $id => $term) {
        $filter2 .= "<div class='sector sector-" . $term->tid . " " . $id . "' data-value='" . $term->tid . "'>";
        $filter2 .= $term->name;
        $filter2 .= "</div>";
      }
      $filter2 .= "</div>";
      $filter2 .= '<div id="filter-2-label-box"></div>';
      $filter2 .= '</div>';
      $output .= $filter2;

      $filter3 = '<div id="filter-3" class="filter col col3">';
      $filter3 .= '<h4 class="filter-label">' . t('Critery') . '</h4>';

      // Agafemels labels dels criteris.
      $filter3 .= '<div class="icons-wrapper">';
      for ($i = 1; $i <= 15; $i++) {
        $label = explode(',', variable_get('ppp_mapes_keys_field_avaluacio_criteri' . $i, ''), 2)[0];
        $filter3 .= "<div class='criteris criteri-" . $i . " " . $i . "' data-value='field_avaluacio_criteri" . $i . "'>";
        $filter3 .= $label;
        $filter3 .= "</div>";
      }
      $filter3 .= "</div>";
      $filter3 .= '<div id="filter-3-label-box"></div>';
      $filter3 .= '</div>';
      $output .= $filter3;

      $output .= '</div>';

      $block['content'] = $output;

      $placeholder = variable_get('ppp_mapes_placeholder', '');
      $subtitle = variable_get('ppp_mapes_sub', '');
      drupal_add_library('chosen', 'drupal.chosen');
      drupal_add_js(array('ppp_mapes_theme' => array('placeholder' => $placeholder, 'subtitle' => $subtitle)), 'setting');
      drupal_add_js(array('ppp_mapes' => array('punts' => $points)), 'setting');
      drupal_add_js(drupal_get_path('module', 'ppp_mapes') . '/js/leaflet.label.js');
      drupal_add_js(drupal_get_path('module', 'ppp_mapes') . '/js/mapes.js');
      break;
  }

  return $block;
}

/**
 * Implements hook_views_geojson_render_fields_alter().
 */
function ppp_mapes_views_geojson_render_fields_alter(&$feature, $view, $row, $index) {
  global $base_url;
  $entity = $row->_entity_properties['entity object'];
  // Rewrite sectors.
  $output = '-';
  foreach ($row->_entity_properties['field_sector_subsectors'] as $val) {
    $tid = $val;
    foreach (taxonomy_get_parents_all($tid) as $count => $term) {
      if (!empty($term)) {
        $output .= $term->tid . '-';
      }
    }
  }
  $feature['properties']['field_sector_subsectors'] = $output;

  // Rewrite territoris.
  $tid = $row->_entity_properties['field_territori'];
  $output = '-';
  foreach (taxonomy_get_parents_all($tid) as $count => $term) {
    if (!empty($term)) {
      $output .= $term->tid . '-';
    }
  }
  $feature['properties']['field_territori'] = $output;

  // Monter la preview.
  // PROBLEMES DE RENDIMENT FER AIXO AIXI AQUI.
  $prw  = '';
  $prw .= '<div class="prw-top">';
  $prw .= render(field_view_field('node', $entity, 'field_fotografia', array('label' => 'hidden')));
  $prw .= '<h2 class="prw-title"><a href="' . $base_url . '/node/' . $row->_entity_properties['nid'] . '">' . $row->_entity_properties['title'] . '</a></h2>';
  $prw .= '<span class="prw-adreca">';
  $prw .= render(field_view_field('node', $entity, 'field_adreca', array('label' => 'hidden')));
  $prw .= '<span class="ciutat">' . taxonomy_term_load($entity->field_territori[LANGUAGE_NONE][0]['tid'])->name . '</span>';
  $prw .= '</span>';
  $prw .= '</div>';
  $prw .= '<div class="prw-col1">';
  $prw .= '<div class="prw-sec-wr">';
  foreach ($entity->field_sector_subsectors[LANGUAGE_NONE] as $s) {
    $prw .= '<div class="sector sector-' . $s['tid'] . '"></div>';
  }
  $prw .= '</div>';
  $desc = strip_tags(render(field_view_field('node', $entity, 'field_descripcio', array('label' => 'hidden'))));
  $prw .= substr($desc, 0, strpos($desc, ' ', 260));
  $prw .= '</div>';
  $prw .= '<div class="prw-col2">';
  $prw .= '<h4 class="prw-label">' . t('Critery') . '</h4>';
  $prw .= '<div class="prw-crt-wr">';
  $prw .= $feature['properties']['field_llista_criteris_claus_1'];
  $prw .= '</div>';
  $prw .= '</div>';
  $prw .= '<div class="prw-button"><a href="' . $base_url . '/node/' . $row->_entity_properties['nid'] . '">' . t('Visit profile') . '</a></div>';
  $feature['properties']['nothing'] = $prw;
}
